{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-tabs.css' | asset_url | stylesheet_tag }}
{{ 'component-pills.css' | asset_url | stylesheet_tag }}
{{ 'component-scroller.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}

{%- if section.settings.layout == 'slider' -%}
	{{ 'flickity.css' | asset_url | stylesheet_tag }}
	<script src="{{ 'flickity.pkgd.js' | asset_url }}" defer="defer"></script>
	<script src="{{ 'carousel-slider.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{% liquid
	assign columns = section.settings.columns | at_most: 5
	assign layout_classes = 'grid-3-col-tablet'

	if columns >= 5
		assign layout_classes = layout_classes | append: ' grid-compact grid-5-col-desktop'
	endif

	if columns == 4
		assign layout_classes = layout_classes | append: ' grid-4-col-desktop'
	endif

	if section.settings.layout == 'slider'
		assign layout_classes = layout_classes | append: ' grid-carousel'
	endif

	if settings.products_two_column_mobile and section.settings.stack_on_mobile
		assign layout_classes = layout_classes | prepend: 'product-grid grid grid-2-col '
	else
		assign layout_classes = layout_classes | prepend: 'grid grid-1-col '
	endif

	if section.settings.layout == 'media'
		assign layout_classes = 'grid product-grid grid-media-cards'
		if settings.products_two_column_mobile and section.settings.stack_on_mobile
			assign layout_classes = layout_classes | append: ' grid-2-col grid-1-col-tablet'
		else
			assign layout_classes = layout_classes | append: ' grid-1-col grid-1-col-tablet'
		endif
	endif

	assign block_section_class = 'block-section'
	unless section.settings.color_scheme == 'background-1'
		assign block_section_class = block_section_class | append: ' block-section-padded'
	endunless

	assign mobile_two_columns = false
	if settings.products_two_column_mobile and section.settings.stack_on_mobile
		assign mobile_two_columns = true
	endif
%}

<style>
	#shopify-section-{{ section.id }} .block-section {
		margin-top: {{ section.settings.spacing_top | times: 0.8 | round: 0 }}px;
		margin-bottom: {{ section.settings.spacing_bottom | times: 0.8 | round: 0 }}px;
	}

	#shopify-section-{{ section.id }} .block-section-padded {
		margin-top: 0;
		margin-bottom: 0;
		padding-top: {{ section.settings.spacing_top | times: 0.8 | round: 0 }}px;
		padding-bottom: {{ section.settings.spacing_bottom | times: 0.8 | round: 0 }}px;
	}

	@media (min-width: 990px) {
		#shopify-section-{{ section.id }} .block-section {
			margin-top: {{ section.settings.spacing_top }}px;
			margin-bottom: {{ section.settings.spacing_bottom }}px;
		}

		#shopify-section-{{ section.id }} .block-section-padded {
			margin-top: 0;
			margin-bottom: 0;
			padding-top: {{ section.settings.spacing_top }}px;
			padding-bottom: {{ section.settings.spacing_bottom }}px;
		}
	}
</style>

<div class="color-{{ section.settings.color_scheme }}">
	<div class="container">
		<div class="{{ block_section_class }}">
			<div class="block-pill-nav-slider">
				{% if section.settings.heading != blank or section.settings.subheading != blank or section.blocks.size > 0 %}
					<div class="block-block-section-title-wrapper block-block-section-title-tabs">
						{% if section.settings.heading != blank or section.settings.subheading != blank %}
							<div class="block-section-title-wrap">
								{% if section.settings.heading != blank %}
									<h2 class="block-section-title">{{ section.settings.heading }}</h2>
								{% endif %}
								{% if section.settings.subheading != blank %}
									<p class="block-section-subtitle">{{ section.settings.subheading }}</p>
								{% endif %}
							</div>
						{% endif %}

						{% if section.blocks.size > 0 %}
							<div class="block-section-title-aux">
								<tabs-navigation for="TabComponent-{{ section.id }}">
									<div class="tab-nav">
										{% for block in section.blocks %}
											{% assign collection = block.settings.collection %}
											<a href="{{ collection.url }}"
												class="tab-nav-item {% if forloop.index0 == 0 %}is-active{% endif %}"
												data-handle="{{ block.settings.collection.handle }}-{{ forloop.index0 }}"
												{{ block.shopify_attributes }}
											>
												{% if block.settings.tab_label != blank %}
													{{ block.settings.tab_label }}
												{% elsif collection.title %}
													{{ collection.title }}
												{% else %}
													{{ 'onboarding.collection_title' | t }}
												{% endif %}
											</a>
										{% endfor %}
									</div>
								</tabs-navigation>
							</div>
						{% endif %}
					</div>
				{% endif %}

				<div class="collection">
					<tabs-component id="TabComponent-{{ section.id }}" class="tabs-component">
						{% for block in section.blocks %}
							<div class="tabs-component-content" data-handle="{{ block.settings.collection.handle }}-{{ forloop.index0 }}"
								aria-hidden="{% if forloop.index0 != 0 %}true{% else %}false{% endif %}"
							>

							{%- if section.settings.layout == 'slider' -%}
								<carousel-slider id="Carousel-{{ section.id }}-{{ forloop.index0 }}">
							{%- endif -%}

								{%- unless section.settings.stack_on_mobile -%}
									<div class="scroller {% unless section.settings.layout == 'media' %}scroller-tablet{% endunless %}">
										<div class="scroller-inner">
								{%- endunless -%}

								{% liquid
									assign card_class = 'color-background-2'
									if section.settings.layout == 'media'
										assign card_class = card_class | append: ' card-product-media'
									endif

									assign lazyload = false
									if forloop.index0 > 0
										assign lazyload = true
									endif
								%}

									<div class="{{ layout_classes }}">
										{% for product in block.settings.products %}
											{% liquid
												if forloop.index > 2
													assign lazyload = true
												endif
											%}

											<div class="grid-item">
												{% render 'card-product',
													card_product: product,
													show_vendor: section.settings.show_vendor,
													show_stock: section.settings.show_stock,
													show_rating: section.settings.show_rating,
													show_add_to_cart: settings.products_show_add_to_cart,
													show_add_to_cart_mobile: settings.products_show_add_to_cart_mobile,
													class: card_class,
													mobile_two_columns: mobile_two_columns,
													render_layout: section.settings.layout,
													event_context: 'TabbedProductListsSection',
													lazyload: lazyload
												%}
											</div>
										{% else %}
											{% for product in block.settings.collection.products limit: section.settings.products_to_show %}
												{% liquid
													if forloop.index > 2
														assign lazyload = true
													endif
												%}
												<div class="grid-item">
													{% render 'card-product',
														card_product: product,
														show_vendor: section.settings.show_vendor,
														show_stock: section.settings.show_stock,
														show_rating: section.settings.show_rating,
														show_add_to_cart: settings.products_show_add_to_cart,
														show_add_to_cart_mobile: settings.products_show_add_to_cart_mobile,
														class: card_class,
														mobile_two_columns: mobile_two_columns,
														render_layout: section.settings.layout,
														event_context: 'TabbedProductListsSection',
														lazyload: lazyload
													%}
												</div>
											{% else %}
												{% for i in (1..4) %}
													<div class="grid-item">
														{% render 'card-product',
															card_product: nil,
															show_vendor: section.settings.show_vendor,
															show_stock: section.settings.show_stock,
															show_rating: section.settings.show_rating,
															show_add_to_cart: settings.products_show_add_to_cart,
															show_add_to_cart_mobile: settings.products_show_add_to_cart_mobile,
															class: card_class,
															mobile_two_columns: mobile_two_columns,
															render_layout: section.settings.layout,
															event_context: 'TabbedProductListsSection'
														%}
													</div>
												{% endfor %}
											{% endfor %}
										{% endfor %}
									</div>

								{%- unless section.settings.stack_on_mobile -%}
										</div>
									</div>
								{%- endunless -%}

							{%- if section.settings.layout == 'slider' -%}
									<carousel-navigation for="Carousel-{{ section.id }}-{{ forloop.index0 }}">
										<div class="no-js-hidden visible-tablet-up">
											<div class="pill-nav pill-nav-slider pill-nav-slider-inline-nav">
												<button class="pill-nav-item pill-nav-item-prev pill-nav-item-disabled focus-none js-prev color-background-2" aria-disabled="true">
													<span class="visually-hidden">{{ 'sections.slideshow.previous_slide' | t }}</span>
													{% render 'angle', direction: 'left' %}
												</button>
												<button class="pill-nav-item pill-nav-item-next js-next color-background-2" aria-disabled="false">
													<span class="visually-hidden">{{ 'sections.slideshow.next_slide' | t }}</span>
													{% render 'angle', direction: 'right' %}
												</button>
											</div>
										</div>
									</carousel-navigation>
								</carousel-slider>
							{%- endif -%}

							</div>
						{% endfor %}
					</tabs-component>
				</div>
			</div>
		</div>
	</div>
</div>

{% schema %}
{
  "name": "t:sections.tabbed_product_lists.name",
  "disabled_on": {
    "groups": [
      "header",
      "footer",
      "custom.overlays"
    ]
  },
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.tabbed_product_lists.settings.heading.label",
      "default": "Tabbed product lists"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.tabbed_product_lists.settings.subheading.label"
    },
    {
      "type": "header",
      "content": "t:sections.tabbed_product_lists.settings.header_1.content"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 3,
      "max": 12,
      "step": 1,
      "default": 4,
      "label": "t:sections.tabbed_product_lists.settings.products_to_show.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": true,
      "label": "t:sections.tabbed_product_lists.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_stock",
      "default": true,
      "label": "t:sections.tabbed_product_lists.settings.show_stock.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.tabbed_product_lists.settings.show_rating.label",
      "info": "t:sections.tabbed_product_lists.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.layout.heading"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "t:sections.all.layout.layout.label",
      "default": "grid",
      "options": [
        {
          "value": "grid",
          "label": "t:sections.all.layout.layout.options.label_grid"
        },
        {
          "value": "slider",
          "label": "t:sections.all.layout.layout.options.label_slider"
        },
        {
          "value": "media",
          "label": "t:sections.all.layout.layout.options.label_media"
        }
      ]
    },
    {
      "type": "select",
      "id": "columns",
      "label": "t:sections.all.layout.desktop_columns.label",
      "info": "t:sections.tabbed_product_lists.settings.columns.info",
      "default": "4",
      "options": [
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        },
        {
          "value": "5",
          "label": "5"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "stack_on_mobile",
      "default": false,
      "label": "t:sections.all.layout.stack_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.heading"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "t:sections.all.colors.color_scheme.label",
      "default": "background-1",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "accent-3",
          "label": "t:sections.all.colors.accent_3.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.section_spacing.heading"
    },
    {
      "type": "range",
      "id": "spacing_top",
      "min": 0,
      "max": 150,
      "step": 2,
      "default": 90,
      "label": "t:sections.all.section_spacing.spacing_top.label"
    },
    {
      "type": "range",
      "id": "spacing_bottom",
      "min": 0,
      "max": 150,
      "step": 2,
      "default": 90,
      "label": "t:sections.all.section_spacing.spacing_bottom.label"
    }
  ],
  "max_blocks": 5,
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.tabbed_product_lists.blocks.collection.name",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "t:sections.tabbed_product_lists.blocks.collection.settings.collection.label"
        },
        {
          "type": "text",
          "id": "tab_label",
          "label": "t:sections.tabbed_product_lists.blocks.collection.settings.tab_label.label",
          "info": "t:sections.tabbed_product_lists.blocks.collection.settings.tab_label.info"
        },
        {
          "type": "product_list",
          "id": "products",
          "label": "t:sections.tabbed_product_lists.blocks.collection.settings.products.label",
          "info": "t:sections.tabbed_product_lists.blocks.collection.settings.products.info"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.tabbed_product_lists.preset.name",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
